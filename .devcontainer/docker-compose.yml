services:
  # Update this to the name of the service you want to work with in your docker-compose.yml file
  ffc-doc-statement-publisher:
    # Uncomment if you want to override the service's Dockerfile to one in the .devcontainer 
    # folder. Note that the path of the Dockerfile and context is relative to the *primary* 
    # docker-compose.yml file (the first in the devcontainer.json "dockerComposeFile"
    # array). The sample below assumes your primary file is in the root of your project.
    #
    # build:
    #   context: .
    #   dockerfile: .devcontainer/Dockerfile
    build:
      target: development
    
    container_name: ffc-doc-statement-publisher-development
    ports:
      - "9287:9229"
    volumes:
      - ./app:/home/node/app
      - ./package.json:/home/node/package.json
      - ..:/workspaces:cached
    
    # Uncomment the next four lines if you will use a ptrace-based debugger like C++, Go, and Rust.
    # cap_add:
    #   - SYS_PTRACE
    # security_opt:
    #   - seccomp:unconfined

    # Overrides default command so things don't shut down after the process ends.
    command: /bin/sh -c "while sleep 1000; do :; done"
    
  ffc-doc-statement-publisher-postgres:
    ports:
      - "5487:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  ffc-doc-statement-azurite:
    volumes:
      - azurite_data:/data
    ports:
      - "10083:10000"

volumes:
  azurite_data:
  postgres_data:
